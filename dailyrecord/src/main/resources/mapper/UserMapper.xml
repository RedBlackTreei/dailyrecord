<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="onlyfun.js.dao.UserDao">
	<resultMap id="BaseResultMap" type="User">
		<id column="ID" property="id" jdbcType="BIGINT" />
		<result column="NAME" property="name" jdbcType="VARCHAR" />
		<result column="USER_ID" property="userId" jdbcType="VARCHAR" />
		<result column="PASSWORD" property="password" jdbcType="VARCHAR" />
		<result column="EMAIL" property="email" jdbcType="VARCHAR" />
		<result column="CREATETIME" property="createtime" jdbcType="TIMESTAMP" />
		<result column="UPDATETIME" property="updatetime" jdbcType="TIMESTAMP" />
		<result column="MODIFIER" property="modifier" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Base_Column_List">
		ID, NAME, USER_ID, PASSWORD, EMAIL, CREATETIME, UPDATETIME,
		MODIFIER
	</sql>
	<select id="selectAllUser" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from dr_user
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Long">
		select
		<include refid="Base_Column_List" />
		from dr_user
		where ID = #{id,jdbcType=BIGINT}
	</select>
	<select id="selectByUserId" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from dr_user
		where USER_ID = #{userId,jdbcType=VARCHAR}
	</select>
	<select id="selectLoginUser" resultMap="BaseResultMap"
		parameterType="java.util.Map">
		select
		<include refid="Base_Column_List" />
		from dr_user
		where USER_ID = #{userId,jdbcType=VARCHAR} and PASSWORD =
		#{password,jdbcType=VARCHAR}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from
		dr_user
		where ID = #{id,jdbcType=BIGINT}
	</delete>
	<insert id="insert" parameterType="onlyfun.js.model.User">
		insert into dr_user (ID,
		NAME,
		USER_ID, PASSWORD,
		EMAIL, CREATETIME, UPDATETIME,
		MODIFIER)
		values
		(#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR},
		#{password,jdbcType=VARCHAR},
		#{email,jdbcType=VARCHAR},
		#{createtime,jdbcType=TIMESTAMP}, #{updatetime,jdbcType=TIMESTAMP},
		#{modifier,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="onlyfun.js.model.User">
		insert into dr_user
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				ID,
			</if>
			<if test="userId != null">
				USER_ID,
			</if>
			<if test="password != null">
				PASSWORD,
			</if>
			<if test="email != null">
				EMAIL,
			</if>
			<if test="createtime != null">
				CREATETIME,
			</if>
			<if test="updatetime != null">
				UPDATETIME,
			</if>
			<if test="modifier != null">
				MODIFIER,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=BIGINT},
			</if>
			<if test="userId != null">
				#{userId,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				#{password,jdbcType=VARCHAR},
			</if>
			<if test="email != null">
				#{email,jdbcType=VARCHAR},
			</if>
			<if test="createtime != null">
				#{createtime,jdbcType=TIMESTAMP},
			</if>
			<if test="updatetime != null">
				#{updatetime,jdbcType=TIMESTAMP},
			</if>
			<if test="modifier != null">
				#{modifier,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="onlyfun.js.model.User">
		update dr_user
		<set>
			<if test="userId != null">
				USER_ID = #{userId,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				PASSWORD = #{password,jdbcType=VARCHAR},
			</if>
			<if test="email != null">
				EMAIL = #{email,jdbcType=VARCHAR},
			</if>
			<if test="createtime != null">
				CREATETIME = #{createtime,jdbcType=TIMESTAMP},
			</if>
			<if test="updatetime != null">
				UPDATETIME = #{updatetime,jdbcType=TIMESTAMP},
			</if>
			<if test="modifier != null">
				MODIFIER = #{modifier,jdbcType=VARCHAR},
			</if>
		</set>
		where ID = #{id,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKey" parameterType="onlyfun.js.model.User">
		update dr_user
		set
		USER_ID = #{userId,jdbcType=VARCHAR},
		PASSWORD =
		#{password,jdbcType=VARCHAR},
		EMAIL = #{email,jdbcType=VARCHAR},
		CREATETIME = #{createtime,jdbcType=TIMESTAMP},
		UPDATETIME =
		#{updatetime,jdbcType=TIMESTAMP},
		MODIFIER =
		#{modifier,jdbcType=VARCHAR}
		where ID = #{id,jdbcType=BIGINT}
	</update>
</mapper>